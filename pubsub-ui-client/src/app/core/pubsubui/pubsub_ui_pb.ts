// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file pubsub_ui.proto (package pubsubui, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message as Message$1, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message pubsubui.TopicSubscription
 */
export class TopicSubscription extends Message$1<TopicSubscription> {
  /**
   * @generated from field: string gcp_project_id = 1;
   */
  gcpProjectId = "";

  /**
   * @generated from field: string pubsub_topic_name = 2;
   */
  pubsubTopicName = "";

  constructor(data?: PartialMessage<TopicSubscription>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pubsubui.TopicSubscription";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "gcp_project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pubsub_topic_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TopicSubscription {
    return new TopicSubscription().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TopicSubscription {
    return new TopicSubscription().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TopicSubscription {
    return new TopicSubscription().fromJsonString(jsonString, options);
  }

  static equals(a: TopicSubscription | PlainMessage<TopicSubscription> | undefined, b: TopicSubscription | PlainMessage<TopicSubscription> | undefined): boolean {
    return proto3.util.equals(TopicSubscription, a, b);
  }
}

/**
 * @generated from message pubsubui.Message
 */
export class Message extends Message$1<Message> {
  /**
   * @generated from field: bytes data = 1;
   */
  data = new Uint8Array(0);

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 2;
   */
  timestamp?: Timestamp;

  constructor(data?: PartialMessage<Message>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pubsubui.Message";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "timestamp", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Message {
    return new Message().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Message {
    return new Message().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Message {
    return new Message().fromJsonString(jsonString, options);
  }

  static equals(a: Message | PlainMessage<Message> | undefined, b: Message | PlainMessage<Message> | undefined): boolean {
    return proto3.util.equals(Message, a, b);
  }
}

